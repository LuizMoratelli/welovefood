[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nmoment = Package['momentjs:moment'].moment;\nAccounts = Package['accounts-base'].Accounts;\naccountsUIBootstrap3 = Package['ian:accounts-ui-bootstrap-3'].accountsUIBootstrap3;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"addFoodPlace\":{\"template.addFoodPlace.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/addFoodPlace/template.addFoodPlace.js                                                               //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.__checkName(\"addFoodPlace\");\nTemplate[\"addFoodPlace\"] = new Template(\"Template.addFoodPlace\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"row\">\\n        <div class=\"col-xs-12\">\\n            <form>\\n                <div class=\"form-group\">\\n                    <label for=\"newFoodPlace\">Restaurante</label>\\n                    <input type=\"text\" name=\"newFoodPlace\" id=\"newFoodPlace\" class=\"form-control\" placeholder=\"Novo Restaurante\">\\n                </div>\\n                <div class=\"form-group\">\\n                    <button name=\"newFoodPlace\" class=\"btn btn-success btn-block\">Novo Restaurante!</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>');\n}));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"addFoodPlace.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/addFoodPlace/addFoodPlace.js                                                                        //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nTemplate.addFoodPlace.events({\n  \"click button[name=newFoodPlace]\": function (e, template) {\n    e.preventDefault();\n    var input = $(\"#newFoodPlace\");\n    var nome = input.val(); //FoodPlaces.insert({nome: nome});\n\n    Meteor.call(\"addFoodPlace\", {\n      nome: nome\n    });\n    input.val(\"\");\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"listFoodPlaces\":{\"template.listFoodPlaces.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/listFoodPlaces/template.listFoodPlaces.js                                                           //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.__checkName(\"listFoodPlaces\");\nTemplate[\"listFoodPlaces\"] = new Template(\"Template.listFoodPlaces\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"row\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"col-xs-12\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"foodPlaces\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"col-xs-11\"\n    }, \"\\n                    Comer em: \", Blaze.View(\"lookup:nome\", function() {\n      return Spacebars.mustache(view.lookup(\"nome\"));\n    }), \"\\n                \"), \"\\n                \", HTML.DIV({\n      class: \"col-xs-1\"\n    }, \"\\n                    \", HTML.BUTTON({\n      class: \"btn btn-danger\"\n    }, \"Excluir\"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.HR(), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"listFoodPlaces.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/listFoodPlaces/listFoodPlaces.js                                                                    //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n//Define Helper de um Template\n//Helper vira algo no respectivo HTML\nTemplate.listFoodPlaces.helpers({\n  foodPlaces: function () {\n    return FoodPlaces.find({});\n  },\n  dateConvert: function () {\n    return moment(this.data).format('DD/MM/YYYY HH:mm');\n  }\n});\nTemplate.listFoodPlaces.events({\n  \"click button\": function (e, template) {\n    var foodPlace = this; //FoodPlaces.remove({_id: foodPlace._id});\n\n    Meteor.call(\"removeFoodPlace\", foodPlace._id);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/index.js                                                                                            //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.startup(function () {\n  Meteor.subscribe(\"FoodPlaces\");\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"models\":{\"foodPlaces.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// models/foodPlaces.js                                                                                       //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nFoodPlaces = new Mongo.Collection(\"FoodPlaces\");\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\"\n  ]\n});\nrequire(\"/client/addFoodPlace/template.addFoodPlace.js\");\nrequire(\"/client/listFoodPlaces/template.listFoodPlaces.js\");\nrequire(\"/client/addFoodPlace/addFoodPlace.js\");\nrequire(\"/client/listFoodPlaces/listFoodPlaces.js\");\nrequire(\"/client/index.js\");\nrequire(\"/models/foodPlaces.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/addFoodPlace/addFoodPlace.js","client/listFoodPlaces/listFoodPlaces.js","client/index.js","models/foodPlaces.js"],"names":["Template","addFoodPlace","events","e","template","preventDefault","input","$","nome","val","Meteor","call","listFoodPlaces","helpers","foodPlaces","FoodPlaces","find","dateConvert","moment","data","format","foodPlace","_id","startup","subscribe","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAASC,YAAT,CAAsBC,MAAtB,CAA6B;AACzB,qCAAmC,UAASC,CAAT,EAAYC,QAAZ,EAAqB;AACpDD,MAAEE,cAAF;AAEA,QAAIC,QAAQC,EAAE,eAAF,CAAZ;AACA,QAAIC,OAAOF,MAAMG,GAAN,EAAX,CAJoD,CAMpD;;AACAC,WAAOC,IAAP,CAAY,cAAZ,EAA4B;AAACH,YAAMA;AAAP,KAA5B;AACAF,UAAMG,GAAN,CAAU,EAAV;AACH;AAVwB,CAA7B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACAT,SAASY,cAAT,CAAwBC,OAAxB,CAAgC;AAE5BC,cAAY,YAAU;AAClB,WAAOC,WAAWC,IAAX,CAAgB,EAAhB,CAAP;AACH,GAJ2B;AAM5BC,eAAa,YAAU;AACnB,WAAOC,OAAO,KAAKC,IAAZ,EAAkBC,MAAlB,CAAyB,kBAAzB,CAAP;AACH;AAR2B,CAAhC;AAWApB,SAASY,cAAT,CAAwBV,MAAxB,CAA+B;AAC3B,kBAAgB,UAASC,CAAT,EAAYC,QAAZ,EAAsB;AAClC,QAAIiB,YAAY,IAAhB,CADkC,CAGlC;;AACAX,WAAOC,IAAP,CAAY,iBAAZ,EAA+BU,UAAUC,GAAzC;AACH;AAN0B,CAA/B,E;;;;;;;;;;;ACbAZ,OAAOa,OAAP,CAAe,YAAU;AACrBb,SAAOc,SAAP,CAAiB,YAAjB;AACH,CAFD,E;;;;;;;;;;;ACAAT,aAAa,IAAIU,MAAMC,UAAV,CAAqB,YAArB,CAAb,C","file":"/app.js","sourcesContent":["Template.addFoodPlace.events({\n    \"click button[name=newFoodPlace]\": function(e, template){\n        e.preventDefault();\n\n        var input = $(\"#newFoodPlace\");\n        var nome = input.val();\n\n        //FoodPlaces.insert({nome: nome});\n        Meteor.call(\"addFoodPlace\", {nome: nome});\n        input.val(\"\");\n    }\n});\n","//Define Helper de um Template\n//Helper vira algo no respectivo HTML\nTemplate.listFoodPlaces.helpers({\n\n    foodPlaces: function(){\n        return FoodPlaces.find({});\n    },\n\n    dateConvert: function(){\n        return moment(this.data).format('DD/MM/YYYY HH:mm');\n    }\n});\n\nTemplate.listFoodPlaces.events({\n    \"click button\": function(e, template) {\n        var foodPlace = this;\n\n        //FoodPlaces.remove({_id: foodPlace._id});\n        Meteor.call(\"removeFoodPlace\", foodPlace._id);\n    }\n});\n","Meteor.startup(function(){\n    Meteor.subscribe(\"FoodPlaces\");\n});\n","FoodPlaces = new Mongo.Collection(\"FoodPlaces\");\n"]}}]